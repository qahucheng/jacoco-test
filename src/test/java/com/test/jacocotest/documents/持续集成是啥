持续集成
1. 请解释一下什么是持续集成和持续交付，以及它们的作用。

持续集成（Continuous Integration，简称CI）和持续交付（Continuous Delivery，简称CD）是现代软件开发中的两个重要实践，它们的目的都是通过自动化、持续地构建、测试和发布软件，提高软件开发的效率和质量。
持续集成是指开发人员将代码频繁地集成到共享的代码库中，并通过自动化的构建、测试和代码质量检查等流程，确保每次集成都是成功的，并及时发现和解决代码问题。
在CI阶段我们可以对代码进行sonar检查、单测检查、构建、部署、自动化

持续集成的主要作用是：
1. 提高软件开发的效率和质量。通过自动化和持续化的构建和测试流程，可以及时发现和解决代码问题，避免代码集成后出现严重的错误。
2. 降低软件开发的成本和风险。通过自动化流程，减少了手动测试和部署的时间和成本，同时避免了由于代码集成不当而导致的风险和延误。

持续交付是指将软件开发、测试和发布的过程自动化，使得每个软件的变更都能够快速、可靠地交付到生产环境中。持续交付的主要作用是：
1. 缩短软件开发和发布的周期。通过自动化流程，加速了软件开发、测试和部署的速度，使得软件能够更快地交付到用户手中。像蓝绿部署这样的模式使得以非常低的风险部署代码成为可能，并且几乎没有停机时间，使得部署对用户来说完全检测不到。
2. 提高软件的可靠性和稳定性。通过自动化测试和部署流程，降低了人为错误的风险，并且能够在发现问题时快速回滚到上一个稳定版本。持续交付的大部分过程是自动化的，测试人员现在有很多时间专注于重要的测试阶段，如探索性、可用性、安全性和性能测试。现在可以在交付过程中连续执行这些活动，确保更高质量的应用程序。
3. 由于频繁发布，该团队与用户密切合作，了解哪些想法有效，哪些新内容可以实施以取悦用户。持续的用户反馈和新的测试方法也提高了产品的质量。
综上所述，持续集成和持续交付是现代软件开发中的两个重要实践，它们的目的都是通过自动化、持续化的流程，提高软件开发的效率和质量，缩短软件开发和发布的周期，降低成本和风险，提高软件的可靠性和稳定性。

CICD 具有的挑战：
1、培养研发习惯，现在的流程如何与CICD流程融合，其中分支规范、提测规范也是相对比较重要的
2、工具平台的建设，工具平台需要打通与各个基础平台的联通
3、CICD的运营，提升cicd的成熟度，针对CICD过程中的指标数据，应当有一个数据平台收集，方便QA与研发持续的进行运营，其实也就是CICD到底用的怎么样，建立成熟度运营大盘，支持各项指标查看

可能会问的问题：
推进cicd中做的一些事情
cicd中很重要的一环是，结合业务特点制定规范、提高cicd的成熟度
1、业务特点是怎么样，那cicd应该怎么样，
2、cicd如果我们单纯的用于自己的合并分支、构建、部署其实只是把原来的手工流程自动化了，结合部署之后的一些组件，比如自动化运行、覆盖率收集这样的流程，才算是与cicd的概念吻合，但想用的好我们就得运营了

运营我们的失败率
运营我们的跳过率
