网络

什么是TCP/IP和UDP
**1、**TCP/IP即传输控制/网络协议，是面向连接的协议，发送数据前要先建立连接(发送方和接收方的成对的两个之间必须建 立连接)，TCP提供可靠的服务，也就是说，通过TCP连接传输的数据不会丢失，没有重复，并且按顺序到达

**2、**UDP它是属于TCP/IP协议族中的一种。是无连接的协议，发送数据前不需要建立连接，是没有可靠性的协议。因为不需要建立连接所以可以在在网络上以任何可能的路径传输，因此能否到达目的地，到达目的地的时间以及内容的正确性都是不能被保证的。


TCP与UDP区别：
**1、**TCP是面向连接的协议，发送数据前要先建立连接，TCP提供可靠的服务，也就是说，通过TCP连接传输的数据不会丢失，没有重复，并且按顺序到达；
**2、**UDP是无连接的协议，发送数据前不需要建立连接，是没有可靠性；
**3、**TCP通信类似于于要打个电话，接通了，确认身份后，才开始进行通行；
**4、**UDP通信类似于学校广播，靠着广播播报直接进行通信。
**5、**TCP只支持点对点通信，UDP支持一对一、一对多、多对一、多对多；
**6、**TCP是面向字节流的，UDP是面向报文的； 面向字节流是指发送数据时以字节为单位，一个数据包可以拆分成若干组进行发送，而UDP一个报文只能一次发完。
**7、**TCP首部开销（20字节）比UDP首部开销（8字节）要大
**8、**UDP 的主机不需要维持复杂的连接状态表
总结
TCP 向上层提供面向连接的可靠服务 ，UDP 向上层提供无连接不可靠服务。
UDP 没有 TCP 传输可靠，但是可以在实时性要求搞的地方有所作为。
对数据准确性要求高，速度可以相对较慢的，可以选用TCP


应用层 表示层 会话层 传输层 网络层  链路层 物理层

形容一下TCP和UDP（TCP三次握手，四次挥手）

TCP通信可看作打电话：
李三(拨了个号码)：喂，是王五吗？ 王五：哎，您谁啊？ 李三：我是李三，我想给你说点事儿，你现在方便吗？ 王五：哦，我现在方便，你说吧。 甲：那我说了啊？ 乙：你说吧。 (连接建立了，接下来就是说正事了…)
UDP通信可看为学校里的广播：
播音室：喂喂喂！全体操场集合


从浏览器地址栏输入url到显示主页的过程
思路: 这道题主要考察的知识点是HTTP的请求过程，DNS解析，TCP三次握手，四次挥手这几个要点，我们都可以讲下。

DNS解析，查找域名对应的IP地址。dns解析先从浏览器缓存中解析 再依次向上
与服务器通过三次握手，建立TCP连接
向服务器发送HTTP请求
服务器处理请求，返回网页内容
浏览器解析并渲染页面
TCP四次挥手，连接结束


什么是Http协议？
Http协议是对客户端和服务器端之间数据之间实现可靠性的传输文字、图片、音频、视频等超文本数据的规范，格式简称为“超文本传输协议”
Http协议属于应用层，及用户访问的第一层就是http

https协议建立的过程
简单来说：客户端向服务端拿到公钥，并把自己的报文发给服务端，服务端拿到加密报文后用自己的私钥进行解密，解密完成后，然后再生成一个对话私钥，因为公钥太大太影响效率了
1、客户端给出协议版本号、一个客户端随机数A（Client random）以及客户端支持的加密方式

2、服务端确认双方使用的加密方式，并给出数字证书、一个服务器生成的随机数B（Server random）

3、客户端确认数字证书有效，生成一个新的随机数C（Pre-master-secret），使用证书中的公钥对C加密，发送给服务端

4、服务端使用自己的私钥解密出C

5、客户端和服务器根据约定的加密方法，使用三个随机数ABC，生成对话秘钥，之后的通信都用这个对话秘钥进行加密。


Http和Https的区别？
Http协议运行在TCP之上，明文传输，客户端与服务器端都无法验证对方的身份；Https是身披SSL(Secure Socket Layer)外壳的Http，运行于SSL上，SSL运行于TCP之上，是添加了加密和认证机制的HTTP。二者之间存在如下不同：

端口不同：Http与Http使用不同的连接方式，用的端口也不一样，前者是80，后者是443；
资源消耗：和HTTP通信相比，Https通信会由于加减密处理消耗更多的CPU和内存资源；
开销：Https通信需要证书，而证书一般需要向认证机构购买；
Https的加密机制是一种共享密钥加密和公开密钥加密并用的混合加密机制。

HTTP请求体由：请求行 、请求头、请求数据组成的，
请求行：
POST http://0.0.0.1:8080/api/query
请求头：
cookie
user_agent
contenttype
请求体：
body {}

响应行
200 http/1.1
响应头

响应体


Http中常见的header字段有哪些？
cookie，请求时传递给服务端的cookie信息 set-cookie，响应报文首部设置要传递给客户端的cookie信息 allow，支持什么HTTP方法 last-modified，资源的最后修改时间 expires,设置资源缓存的失败日期 content-language，实体的资源语言 content-encoding，实体的编码格式 content-length，实体主体部分的大小单位是字节 content-range，返回的实体的哪些范围 content-type，哪些类型 accept-ranges，处理的范围请求 age，告诉客户端服务器在多久前创建了响应 vary，代理服务器的缓存信息 location，用于指定重定向后的URI If-Match，值是资源的唯一标识 User-Agent，将创建请求的浏览器和用户代理名称等信息传递给服务器 Transfer-Encoding，传输报文的主体编码方式 connection，管理持久连接，keep-alive , close Cache-Control，控制浏览器的强缓存



常见的http状态码
500 服务器端在执行请求时出错，一般是因为web应用出现bug
404 服务器上找不到请求资源 或路径错误
403 请求资源的访问被服务器拒绝，一般是未获得文件系统的访问权限，访问权限出现问题。
401 请求需要认证
302 临时重定向 临时地从旧地址A跳转到地址B，指定了资源路径
200 OK 请求正常处理

请求行 请求头。请求体
响应头 响应头 响应体







TCP三次握手，四次挥手
https://blog.csdn.net/weixin_44865458/article/details/117234974
三次握手时保证，客户端和服务端两边都能确认：双方的通信接受和发送时完好的，可以开始通信了
四次挥手时用于保证：当服务端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉客户端，“你发的FIN报文我收到了”。只有等到我服务端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四次挥手。



cookie 和 session
Cookie和Session都是客户端与服务器之间保持状态的解决方案，具体来说，cookie机制采用的是在客户端保持状态的方案，而session机制采用的是在服务器端保持状态的方案。
Session 与 Cookie 的对比：
实现机制：Session的实现常常依赖于Cookie机制，通过Cookie机制回传SessionID；
大小限制：Cookie有大小限制并且浏览器对每个站点也有cookie的个数限制，Session没有大小限制，理论上只与服务器的内存大小有关；
安全性：Cookie存在安全隐患，通过拦截或本地文件找得到cookie后可以进行攻击，而Session由于保存在服务器端，相对更加安全；
服务器资源消耗：Session是保存在服务器端上会存在一段时间才会消失，如果session过多会增加服务器的压力。

get和post的区别
1、发送的数据数量
在Get中，只能发送有限数量的数据，因为数据是在URL中发送的；
在POST中，可以发送大量的数据，因为数据是在正文主体中发送的。

2、安全性
GET方法发送的数据不受保护，因为数据在URL栏中公开，这增加了漏洞和黑客攻击的风险。
POST方法发送的数据是安全的，因为数据未在URL栏中公开，还可以在其中使用多种编码技术，这使其具有弹性。
3、缓存
GET方法的数据是可缓存的，可保存的，而POST方法的数据是无法缓存的，且无法保存的。
4、主要作用
GET方法主要用于获取信息。而，POST方法主要用于更新数据。













