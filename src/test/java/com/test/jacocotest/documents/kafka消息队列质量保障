消息队列

异步
通常情况下下可以将一些不必同步操作的处理放到kafka的消费队列中，提高该接口的响应速度
尝鲜支付时通常业务系统确认了这笔可以完成支付，实际的记账过程可以放在异步操作中，因为额度已经扣减了

削峰
使用push模式  所有的消息放到一个统一的server层，再由消费端进行获取

解耦
上游通常不必了解下游
联名卡会接入很多的业务方，业务方消费联名卡的卡状态mq，进行消费发奖，下游的实现上游不需要了解


常见的质量问题：
mafka消息的丢失 和重复消费，幂等问题？？？
消息丢失 生产者：发送完必须ack才确认发送成功，否则会重发
        消费丢失：处理完成后再做ack

并且作为生产者需要明确告诉下游是否可能存在消息漏发和消息重复发送的问题，对于消费者而言对于重复的消息需要处理好幂等，对于漏发消息需要处理兼容问题
类似于股份行发送进件消息？？？
消息的有序性，系统整体设计上，尽量避免消息之间的依赖性。因为单个partition上是有序地  多个partition之间是无序的

消费端上需要对消费的信息进行参数校验，通过发送一些非法消息来操作
延迟队列的消息消费：消息消费失败，发送延迟消息，延迟消息消费成功；消息消费失败，发送延迟消息（设置延迟3s），3s后开始消费消息，消费失败，重试发送延迟消息（设置延迟5s），5s后开始消费消息，消息消费成功
消费端的异常测试，消费逻辑中一定要将所有的异常都catch住，不然会被消费者客户端处理为CONSUMER_FAILURE，容易造成消息积压

